---
AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  EnvPrefix:
    Type: String
    Default: ""
  WebhookVersion:
    Type: String
  CronVersion:
    Type: String
  WorkerVersion:
    Type: String
  # WebVersion:
  #   Type: String
  RootDiscordUserId:
    Type: String
Resources:
  WebhookLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "tehBot-${EnvPrefix}-discord-webhook"
      Code:
        S3Bucket: !ImportValue
          'Fn::Sub': "tehBot-${EnvPrefix}LambdaBucket"
        S3Key: !Sub webhook_package_${WebhookVersion}.zip
      Handler: lambda_function.lambda_handler
      Role: !ImportValue
        'Fn::Sub': "tehBot-${EnvPrefix}WebhookLambdaRoleArn"
      Runtime: "python3.9"
      PackageType: Zip
      Layers:
        - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:901920570463:layer:aws-otel-python-amd64-ver-1-11-1:2"
      TracingConfig:
        Mode: Active
      Environment:
        Variables:
          SQSQUEUE_INTERACTIONS: !ImportValue
            'Fn::Sub': "tehBot-${EnvPrefix}InteractionQueueUrl"
          SECRETS_ARN: !ImportValue
            'Fn::Sub': "tehBot-${EnvPrefix}LambdaSecretsArn"
          DYNAMOTABLE_SETTINGS: !ImportValue
            'Fn::Sub': "tehBot-${EnvPrefix}SettingsTable"
  # WebLambda:
  #   Type: AWS::Lambda::Function
  #   Properties:
  #     Code:
  #       S3Bucket: !ImportValue
  #         'Fn::Sub': "tehBot-${EnvPrefix}LambdaBucket"
  #       S3Key: !Sub webhook_package_${WebVersion}.zip
  #     Handler: lambda_function.lambda_handler
  #     Role: !ImportValue
  #       'Fn::Sub': "tehBot-${EnvPrefix}WebLambdaRoleArn"
  #     Runtime: "python3.9"
  #     PackageType: Zip
  #     Layers:
  #       - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:901920570463:layer:aws-otel-python-amd64-ver-1-11-1:2"
  #     TracingConfig:
  #       Mode: Active
  #     Environment:
  #       Variables:
  #         S3BUCKET_TEMPLATES: !ImportValue
  #           'Fn::Sub': "tehBot-${EnvPrefix}TemplateBucket"
  #         SECRETS_ARN: !ImportValue
  #           'Fn::Sub': "tehBot-${EnvPrefix}LambdaSecretsArn"
  #         DYNAMOTABLE_SETTINGS: !ImportValue
  #           'Fn::Sub': "tehBot-${EnvPrefix}SettingsTable"
  CronLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !ImportValue
          'Fn::Sub': "tehBot-${EnvPrefix}LambdaBucket"
        S3Key: !Sub cron_package_${CronVersion}.zip
      Handler: lambda_function.lambda_handler
      Role: !ImportValue
        'Fn::Sub': "tehBot-${EnvPrefix}CronLambdaRoleArn"
      Runtime: "python3.9"
      PackageType: Zip
      Timeout: 15
      Layers:
        - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:901920570463:layer:aws-otel-python-amd64-ver-1-11-1:2"
      TracingConfig:
        Mode: Active
      Environment:
        Variables:
          SECRETS_ARN: !ImportValue
            'Fn::Sub': "tehBot-${EnvPrefix}LambdaSecretsArn"
          DYNAMOTABLE_STEAM_LOBBY: !ImportValue
            'Fn::Sub': "tehBot-${EnvPrefix}SteamLobbyTable"
          DYNAMOTABLE_SETTINGS: !ImportValue
            'Fn::Sub': "tehBot-${EnvPrefix}SettingsTable"
          DYNAMOTABLE_API: !ImportValue
            'Fn::Sub': "tehBot-${EnvPrefix}ApiTable"
  WorkerLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !ImportValue
          'Fn::Sub': "tehBot-${EnvPrefix}LambdaBucket"
        S3Key: !Sub worker_package_${WorkerVersion}.zip
      Handler: lambda_function.lambda_handler
      Role: !ImportValue
        'Fn::Sub': "tehBot-${EnvPrefix}WorkerLambdaRoleArn"
      Runtime: "python3.9"
      PackageType: Zip
      Timeout: 90
      MemorySize: 160
      Layers:
        - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:901920570463:layer:aws-otel-python-amd64-ver-1-11-1:2"
      TracingConfig:
        Mode: Active
      Environment:
        Variables:
          DYNAMOTABLE_CHART: !ImportValue
            'Fn::Sub': "tehBot-${EnvPrefix}ChartTable"
          DYNAMOTABLE_SETTINGS: !ImportValue
            'Fn::Sub': "tehBot-${EnvPrefix}SettingsTable"
          DYNAMOTABLE_STEAM_LOBBY: !ImportValue
            'Fn::Sub': "tehBot-${EnvPrefix}SteamLobbyTable"
          DYNAMOTABLE_QUOTES: !ImportValue
            'Fn::Sub': "tehBot-${EnvPrefix}QuotesTable"
          S3BUCKET_CACHE: !ImportValue
            'Fn::Sub': "tehBot-${EnvPrefix}CacheBucket"
          SECRETS_ARN: !ImportValue
            'Fn::Sub': "tehBot-${EnvPrefix}LambdaSecretsArn"
          ROOT_DISCORD_USER_ID: !Ref RootDiscordUserId
  WorkerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref WorkerLambda
      Principal: sqs.amazonaws.com
      SourceArn: !ImportValue
        'Fn::Sub': "tehBot-${EnvPrefix}InteractionQueueArn"
  WorkerSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      EventSourceArn: !ImportValue
        'Fn::Sub': "tehBot-${EnvPrefix}InteractionQueueArn"
      FunctionName: !GetAtt WorkerLambda.Arn
      FunctionResponseTypes:
        - ReportBatchItemFailures
Outputs:
  WebhookLambda:
    Value: !Ref WebhookLambda
    Export:
      Name: !Sub "tehBot-${EnvPrefix}WebhookLambda"
  WebhookLambdaArn:
    Value: !GetAtt [WebhookLambda, Arn]
    Export:
      Name: !Sub "tehBot-${EnvPrefix}WebhookLambdaArn"
  # WebLambda:
  #   Value: !Ref WebLambda
  #   Export:
  #     Name: !Sub "tehBot-${EnvPrefix}WebLambda"
  # WebLambdaArn:
  #   Value: !GetAtt [WebLambda, Arn]
  #   Export:
  #     Name: !Sub "tehBot-${EnvPrefix}WebLambdaArn"
  CronLambda:
    Value: !Ref CronLambda
    Export:
      Name: !Sub "tehBot-${EnvPrefix}CronLambda"
  CronLambdaArn:
    Value: !GetAtt [CronLambda, Arn]
    Export:
      Name: !Sub "tehBot-${EnvPrefix}CronLambdaArn"
  WorkerLambda:
    Value: !Ref WorkerLambda
    Export:
      Name: !Sub "tehBot-${EnvPrefix}WorkerLambda"
  WorkerLambdaArn:
    Value: !GetAtt [WorkerLambda, Arn]
    Export:
      Name: !Sub "tehBot-${EnvPrefix}WorkerLambdaArn"